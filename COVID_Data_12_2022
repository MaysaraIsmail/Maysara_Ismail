SELECT 
  * 
FROM 
  alex_project.dbo.covid_death;
SELECT 
  * 
FROM 
  alex_project.dbo.covid_vac;

SELECT 
  location, 
  date, 
  total_cases, 
  new_cases, 
  total_deaths, 
  population 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
ORDER BY 
  1, 
  2;

SELECT 
  location, 
  date, 
  total_cases, 
  total_deaths, 
  (total_deaths / total_cases)* 100 AS death_percentage 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
ORDER BY 
  1, 
  2;

SELECT 
  location, 
  date, 
  total_cases, 
  total_deaths, 
  (total_deaths / total_cases)* 100 AS death_percentage 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  location like '%egy%' 
ORDER BY 
  1, 
 
SELECT 
  location, 
  date, 
  total_cases, 
  population, 
  (total_cases / population)* 100 AS cases_percentage_population 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
ORDER BY 
  1, 
  2

SELECT 
  location, 
  population, 
  MAX(total_cases) AS highest_infection, 
  MAX(
    (total_cases / population)
  )* 100 AS cases_percentage_population 
FROM 
  alex_project.dbo.covid_death 
GROUP BY 
  location, 
  population 
ORDER BY 
  cases_percentage_population DESC 
  
SELECT 
  continent, 
  MAX(total_deaths) AS highest_deaths 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
GROUP BY 
  continent 
ORDER BY 
  highest_deaths DESC 
  
SELECT 
  location, 
  MAX(
    CAST(total_deaths AS INT)
  ) AS total_death 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
GROUP BY 
  location 
ORDER BY 
  total_death DESC 
  
SELECT 
  continent, 
  MAX(
    CAST(total_deaths AS INT)
  ) AS total_death 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
GROUP BY 
  continent 
ORDER BY 
  total_death DESC
  
SELECT 
  date, 
  SUM(
    CAST(new_deaths AS INT)
  ) AS total_death, 
  SUM(new_cases) AS total_cases, 
  SUM(
    CAST(new_deaths AS INT)
  )/ SUM(new_cases)* 100 AS global_death_percent 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
GROUP BY 
  date 
ORDER BY 
  total_death DESC 
  
  
SELECT 
  location, 
  SUM(
    CAST(new_deaths AS INT)
  ) AS total_death_count 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
  AND location NOT IN (
    'World', 'European Union', 'International'
  ) 
GROUP BY 
  location 
ORDER BY 
  total_death_count DESC

SELECT 
  location, 
  population, 
  date, 
  MAX(total_cases) AS total_infected, 
  MAX(total_cases / population)* 100 AS infection_percentage_date 
FROM 
  alex_project.dbo.covid_death 
WHERE 
  continent IS NOT NULL 
GROUP BY 
  location, 
  population, 
  date 
ORDER BY 
  infection_percentage_date DESC

SELECT * 
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  AND vac.continent= dea.continent


SELECT dea.continent, dea.location,dea.date,dea.population,vac.new_vaccinations
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  AND vac.continent= dea.continent
  WHERE dea.continent IS NOT NULL
ORDER BY 2,3

SELECT dea.continent, dea.location,dea.date,dea.population,vac.new_vaccinations,
SUM(CONVERT(BIGINT, vac.new_vaccinations)) OVER(PARTITION BY dea.location) 
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  WHERE dea.continent IS NOT NULL
ORDER BY 2,3

SELECT dea.continent, dea.location,dea.date,dea.population,vac.new_vaccinations,
SUM(CONVERT(BIGINT, vac.new_vaccinations)) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolloing_vaccinated
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  WHERE dea.continent IS NOT NULL
ORDER BY 2,3


WITH popvsvac (continent,location, date, population,new_vaccinations, rolling_vaccinated)
AS 
(
SELECT dea.continent, dea.location,dea.date,dea.population,vac.new_vaccinations,
SUM(CONVERT(BIGINT, vac.new_vaccinations)) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolloing_vaccinated
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  WHERE dea.continent IS NOT NULL
  )
  SELECT * , (rolling_vaccinated/population)*100 AS vac_percentage
  FROM popvsvac

  
  DROP TABLE IF EXISTS #vaccinationtopopulation
  CREATE TABLE #vaccinationtopopulation
  (
  continent NVARCHAR(250),
  location  NVARCHAR(250),
  date      DATETIME,
  population NUMERIC,
  new_vaccinations NUMERIC,
  rolling_vaccinated NUMERIC
  )
  INSERT INTO #vaccinationtopopulation
  SELECT dea.continent, dea.location,dea.date,dea.population,vac.new_vaccinations,
SUM(CONVERT(BIGINT, vac.new_vaccinations)) OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_vaccinated
FROM alex_project..covid_vac    vac
JOIN alex_project..covid_death  dea
  ON vac.location = dea.location
  AND vac.date = dea.date
  
  
  SELECT * 
  , (rolling_vaccinated/population    )*100 AS percentage_of_vaccination
  FROM #vaccinationtopopulation

CREATE VIEW vaccinationtopopulation AS 
SELECT 
  dea.continent, 
  dea.location, 
  dea.date, 
  dea.population, 
  vac.new_vaccinations, 
  SUM(
    CONVERT(BIGINT, vac.new_vaccinations)
  ) OVER(
    PARTITION BY dea.location 
    ORDER BY 
      dea.location, 
      dea.date
  ) AS rolloing_vaccinated 
FROM 
  alex_project..covid_vac vac 
  JOIN alex_project..covid_death dea ON vac.location = dea.location 
  AND vac.date = dea.date 
WHERE 
  dea.continent IS NOT NULL
